#!/bin/sh

KMOD_PATH=/lib/modules/3.10.14__isvp_swan_1.0__/ingenic

# this is the objective clock setting
# cat /proc/jz/clock/clocks
#ID NAME       FRE        stat       count     parent
#--------------------------------------------------------
# 1 ext0          0.032MHz  enable   0 root
# 2 ext1         24.000MHz  enable   11 root
# 3 otg_phy      48.000MHz  enable   0 root
#--------------------------------------------------------
# 5 apll       1392.000MHz  enable   1 ext1
# 6 mpll       1080.000MHz  enable   7 ext1
# 7 vpll       1200.000MHz  enable   1 ext1
# 8 sclka      1392.000MHz  enable   9 apll
#--------------------------------------------------------
#10 cclk       1392.000MHz  enable   0 sclka
#11 l2clk       696.000MHz  enable   0 sclka
#12 h0clk       270.000MHz  enable   4 mpll
#13 h2clk       270.000MHz  enable   6 mpll
#14 pclk        135.000MHz  enable   6 mpll
#15 msc          24.000MHz  enable   0 ext1
#--------------------------------------------------------
#17 cgu_isp     216.000MHz  enable   1 mpll
#18 cgu_cim      24.000MHz  enable   1 vpll
#19 cgu_ssi      49.090MHz  enable   2 mpll
#20 cgu_msc_mux 1392.000MHz  enable   0 sclka
#21 cgu_i2s_spk    4.096MHz  enable   2 sclka
#22 cgu_i2s_mic    4.096MHz  enable   2 sclka
#23 cgu_msc1     24.000MHz  enable   1 sclka
#24 cgu_msc0     24.000MHz  enable   0 sclka
#25 cgu_lpc       4.687MHz disable   0 vpll
#26 cgu_macphy    4.218MHz disable   0 mpll
#27 cgu_vpu     540.000MHz  enable   1 mpll
#28 cgu_ddr     540.000MHz  enable   0 mpll
#29 cgu_rsa      67.500MHz disable   0 mpll
#--------------------------------------------------------
#31 ddr         270.000MHz  enable   0 h0clk
#32 tcu         135.000MHz  enable   0 pclk
#33 rtc         135.000MHz  enable   0 pclk
#34 des         135.000MHz  enable   0 pclk
#35 csi         135.000MHz  enable   1 pclk
#36 lcd         270.000MHz disable   0 h0clk
#37 isp         270.000MHz  enable   1 h0clk
#38 pdma        270.000MHz  enable   1 h2clk
#39 sfc         270.000MHz  enable   1 h2clk
#40 uart2        24.000MHz disable   0 ext1
#41 uart1        24.000MHz  enable   1 ext1
#42 uart0        24.000MHz disable   0 ext1
#43 sadc        135.000MHz  enable   0 pclk
#44 dmic        135.000MHz disable   0 pclk
#45 aic         135.000MHz  enable   1 pclk
#46 hash        270.000MHz disable   0 h2clk
#47 i2c1        135.000MHz disable   0 pclk
#48 i2c0        135.000MHz disable   0 pclk
#49 ssi0         49.090MHz  enable   0 cgu_ssi
#50 ssi1         49.090MHz disable   0 cgu_ssi
#51 ssi_slv     135.000MHz disable   0 pclk
#52 msc1        270.000MHz  enable   0 h2clk
#53 msc0        270.000MHz  enable   0 h2clk
#54 otg1        270.000MHz  enable   1 h2clk
#--------------------------------------------------------
#56 cpu          24.000MHz  enable   0 ext1
#57 apb0         24.000MHz  enable   0 ext1
#58 sys_ost      24.000MHz  enable   2 ext1
#59 ahb0         24.000MHz  enable   0 ext1
#--------------------------------------------------------
#61 riscv       270.000MHz  enable   0 h2clk
#62 aes         270.000MHz disable   0 h2clk
#63 rsa         135.000MHz disable   0 pclk
#64 ahb1         24.000MHz  enable   1 ext1
#65 gmac        270.000MHz disable   0 h2clk
#66 ipu         270.000MHz  enable   5090 h0clk
#67 dtrng       135.000MHz disable   0 pclk
#68 avpu        270.000MHz  enable   1 h0clk


echo 216000000 > /proc/jz/clock/cgu_isp/rate
echo 4096000 > /proc/jz/clock/cgu_i2s_mic/rate
echo 4096000 > /proc/jz/clock/cgu_i2s_spk/rate

echo 1 >/proc/sys/vm/overcommit_memory

check_return() {
    if [ $? -ne 0 ]; then
        echo err: $1
        echo exit
        exit
    fi
}

lsmod | grep "avpu" >/dev/null
if [ $? -ne 0 ]; then
    insmod ${KMOD_PATH/%\//}/avpu.ko clk_name='mpll' avpu_clk=540000000
    check_return "insmod avpu"
fi

lsmod | grep "sinfo" >/dev/null
if [ $? -ne 0 ]; then
    insmod ${KMOD_PATH/%\//}/sinfo.ko
    check_return "insmod sinfo"
fi
echo 1 >/proc/jz/sinfo/info
check_return "start sinfo"

#if fw_printenv -n sensor >/dev/null; then
#    export SENSOR=$(fw_printenv -n sensor)
#    logger -s -p daemon.info -t ingenic "Get data from environment and set SENSOR as ${SENSOR}"
#else
    SENSOR_INFO=$(cat /proc/jz/sinfo/info)
    check_return "get sensor type"
    SENSOR=${SENSOR_INFO#*:}
    if [ "sensor not found" = "$SENSOR" ]; then
        unset SENSOR
        fw_setenv sensor
    else
        logger -s -p daemon.info -t ingenic "Get data from sinfo and set SENSOR as ${SENSOR}"
        fw_setenv sensor $SENSOR && logger -s -p daemon.info -t ingenic "Write detected ${SENSOR} to U-Boot ENV"
    fi
#fi


case ${SENSOR} in
"gc2053")
    ISP_PARAM="isp_clk=125000000"
    SENSOR_PARAM="sensor_max_fps=25 data_interface=1"
    ;;
"gc2083")
    ISP_PARAM="isp_clk=200000000"
    SENSOR_PARAM="shvflip=1"
    ;;
"gc4653")
    ISP_PARAM="isp_clk=200000000"
    SENSOR_PARAM=""
    ;;
"imx307")
    ISP_PARAM="isp_clk=125000000"
    SENSOR_PARAM=""
    ;;
"jxf37")
    ISP_PARAM="isp_clk=200000000 isp_memopt=1 isp_day_night_switch_drop_frame_num=1 isp_ch0_pre_dequeue_time=12 isp_ch0_pre_dequeue_interrupt_process=0 isp_ch0_pre_dequeue_valid_lines=540"
    SENSOR_PARAM="shvflip=1"
    ;;
"jxh62")
    ISP_PARAM=""
    SENSOR_PARAM=""
    ;;
"jxq03"|"jxq03p")
    ISP_PARAM="isp_clk=150000000"
    SENSOR_PARAM=""
    ;;
"sc200ai")
    ISP_PARAM="isp_clk=100000000 isp_ch0_pre_dequeue_time=20 isp_ch0_pre_dequeue_interrupt_process=0 isp_memopt=1"
    SENSOR_PARAM="shvflip=1"
    ;;
"sc2232")
    ISP_PARAM="isp_clk=125000000"
    SENSOR_PARAM=""
    ;;
"sc2335")
    ISP_PARAM="isp_clk=100000000 isp_ch0_pre_dequeue_time=20 isp_ch0_pre_dequeue_interrupt_process=0 isp_memopt=1"
    SENSOR_PARAM=""
    ;;
"sc5235")
    ISP_PARAM="isp_clk=200000000"
    SENSOR_PARAM=""
    ;;
*)
    ISP_PARAM="isp_clk=125000000"
    SENSOR_PARAM=""
    break
    ;;
esac

echo --------------------
echo "ISP_PARAM: ${ISP_PARAM}"
echo "SENSOR: ${SENSOR}"
echo "SENSOR_PARAM: ${SENSOR_PARAM}"
echo --------------------

lsmod | grep "tx_isp" >/dev/null
if [ $? -ne 0 ]; then
    insmod ${KMOD_PATH/%\//}/tx-isp-t31.ko ${ISP_PARAM}
    check_return "insmod isp drv"
fi

lsmod | grep "audio" >/dev/null
if [ $? -ne 0 ]; then
    insmod ${KMOD_PATH/%\//}/audio.ko
    check_return "insmod audio"
fi

lsmod | grep ${SENSOR} >/dev/null
if [ $? -ne 0 ]; then
    insmod ${KMOD_PATH/%\//}/sensor_${SENSOR}_t31.ko ${SENSOR_PARAM}
    check_return "insmod sensor drv"
fi

insmod ${KMOD_PATH/%\//}/gpio.ko

insmod ${KMOD_PATH/%\//}/sample_pwm_core.ko
insmod ${KMOD_PATH/%\//}/sample_pwm_hal.ko
